(in-package #:org.shirakumo.maiden.agents.lookup)

(macrolet ((define-l1sp-lookups (&rest lookups)
             `(progn ,@(loop for lookup in lookups
                             collect `(define-webpage-lookup ,lookup (term)
                                        (format NIL "http://l1sp.org/~a/~a"
                                                ,(string-downcase lookup) (drakma:url-encode term :utf-8)))))))
  (define-l1sp-lookups asdf ccl cffi clim clisp clx pcl sbcl))

(define-weitz-doc-lookup chunga "https://edicl.github.io/chunga/")
(define-weitz-doc-lookup cl-fad "https://edicl.github.io/cl-fad/")
(define-weitz-doc-lookup cl-gd "https://edicl.github.io/cl-gd/")
(define-weitz-doc-lookup cl-ppcre "https://edicl.github.io/cl-ppcre/")
(define-weitz-doc-lookup cl-unicode "https://edicl.github.io/cl-unicode/")
(define-weitz-doc-lookup cl-webdav "https://edicl.github.io/cl-webdav/")
(define-weitz-doc-lookup cl-who "https://edicl.github.io/cl-who/" :iso-8859-1)
(define-weitz-doc-lookup drakma "https://edicl.github.io/drakma/")
(define-weitz-doc-lookup flexi-streams "https://edicl.github.io/flexi-streams/")
(define-weitz-doc-lookup html-template "https://edicl.github.io/html-template/" :iso-8859-1)
(define-weitz-doc-lookup hunchentoot "https://edicl.github.io/hunchentoot/")
(define-weitz-doc-lookup url-rewrite "https://edicl.github.io/url-rewrite/")

(macrolet ((define-alexandria-docs ()
             `(define-table-lookup alexandria
                ,@(coerce (parse-alexandria-docs) 'list))))
  (define-alexandria-docs))

(macrolet ((define-usocket-docs ()
             `(define-table-lookup usocket
                ,@(coerce (parse-usocket-docs) 'list))))
  (define-usocket-docs))

(macrolet ((define-cffi-docs ()
             `(define-table-lookup cffi
                ,@(parse-cffi-docs))))
  (define-cffi-docs))

(define-table-lookup bordeaux-threads
  (("About") "https://trac.common-lisp.net/bordeaux-threads/wiki/ApiDocumentation")
  (("Thread Creation") "https://trac.common-lisp.net/bordeaux-threads/wiki/ApiDocumentation#ThreadCreation")
  (("Locks") "https://trac.common-lisp.net/bordeaux-threads/wiki/ApiDocumentation#Resourcecontention:locksandrecursivelocks")
  (("Condition Variables") "https://trac.common-lisp.net/bordeaux-threads/wiki/ApiDocumentation#Resourcecontention:conditionvariables")
  (("Introspection" "Debugging") "https://trac.common-lisp.net/bordeaux-threads/wiki/ApiDocumentation#Introspectiondebugging")
  (("function make-thread" "make-thread") "https://trac.common-lisp.net/bordeaux-threads/wiki/ApiDocumentation#make-threadfunctionkeyname")
  (("variable *default-special-bindings*" "*default-special-bindings*") "https://trac.common-lisp.net/bordeaux-threads/wiki/ApiDocumentation#default-special-bindings")
  (("function current-thread" "current-thread") "https://trac.common-lisp.net/bordeaux-threads/wiki/ApiDocumentation#current-thread")
  (("function threadp" "threadp") "https://trac.common-lisp.net/bordeaux-threads/wiki/ApiDocumentation#threadpobject")
  (("function thread-name" "thread-name") "https://trac.common-lisp.net/bordeaux-threads/wiki/ApiDocumentation#thread-namethread")
  (("function make-lock" "make-lock") "https://trac.common-lisp.net/bordeaux-threads/wiki/ApiDocumentation#make-lockoptionalname")
  (("function acquire-lock" "acquire-lock") "https://trac.common-lisp.net/bordeaux-threads/wiki/ApiDocumentation#acquire-locklockoptionalwait-p")
  (("function release-lock" "release-lock") "https://trac.common-lisp.net/bordeaux-threads/wiki/ApiDocumentation#release-locklock")
  (("macro with-lock-held" "with-lock-held") "https://trac.common-lisp.net/bordeaux-threads/wiki/ApiDocumentation#with-lock-heldplacebodybody")
  (("function make-recursive-lock" "make-recursive-lock") "https://trac.common-lisp.net/bordeaux-threads/wiki/ApiDocumentation#make-recursive-lockoptionalname")
  (("function acquire-recursive-lock" "acquire-recursive-lock") "https://trac.common-lisp.net/bordeaux-threads/wiki/ApiDocumentation#acquire-recursive-locklock")
  (("function release-recursive-lock" "release-recursive-lock") "https://trac.common-lisp.net/bordeaux-threads/wiki/ApiDocumentation#release-recursive-locklock")
  (("macro with-recursive-lock-held" "with-recursive-lock-held") "https://trac.common-lisp.net/bordeaux-threads/wiki/ApiDocumentation#with-recursive-lock-heldplacekeytimeoutbodybody")
  (("function thread-yield" "thread-yield") "https://trac.common-lisp.net/bordeaux-threads/wiki/ApiDocumentation#thread-yield")
  (("function make-condition-variable" "make-condition-variable") "https://trac.common-lisp.net/bordeaux-threads/wiki/ApiDocumentation#make-condition-variable")
  (("function condition-wait" "condition-wait") "https://trac.common-lisp.net/bordeaux-threads/wiki/ApiDocumentation#condition-waitcondition-variablelock")
  (("function condition-notify" "condition-notify") "https://trac.common-lisp.net/bordeaux-threads/wiki/ApiDocumentation#condition-notifycondition-variable")
  (("function all-threads" "all-threads") "https://trac.common-lisp.net/bordeaux-threads/wiki/ApiDocumentation#all-threads")
  (("function interrupt-thread" "interrupt-thread") "https://trac.common-lisp.net/bordeaux-threads/wiki/ApiDocumentation#interrupt-threadthreadfunction")
  (("function destroy-thread" "destroy-thread") "https://trac.common-lisp.net/bordeaux-threads/wiki/ApiDocumentation#destroy-threadthread")
  (("function thread-alive-p" "thread-alive-p") "https://trac.common-lisp.net/bordeaux-threads/wiki/ApiDocumentation#thread-alive-pthread")
  (("function join-thread" "join-thread") "https://trac.common-lisp.net/bordeaux-threads/wiki/ApiDocumentation#join-threadthread"))

(define-table-lookup trivial-garbage
  (("About") "https://common-lisp.net/project/trivial-garbage/#about-package-legend" "About Trivial-Garbage")
  (("function make-weak-pointer" "weak-pointer") "https://common-lisp.net/project/trivial-garbage/#trivial-garbage__fun__make-weak-pointer" "function make-weak-pointer")
  (("function weak-pointer-value" "weak-pointer-value") "https://common-lisp.net/project/trivial-garbage/#trivial-garbage__fun__weak-pointer-value" "function weak-pointer-value")
  (("function weak-pointer-p" "weak-pointer-p") "https://common-lisp.net/project/trivial-garbage/#trivial-garbage__fun__weak-pointer-p" "function weak-pointer-p")
  (("function make-weak-hash-table" "make-weak-hash-table") "https://common-lisp.net/project/trivial-garbage/#trivial-garbage__fun__make-weak-hash-table" "function make-weak-hash-table")
  (("function hash-table-weakness" "hash-table-weakness") "https://common-lisp.net/project/trivial-garbage/#trivial-garbage__fun__hash-table-weakness" "function hash-table-weakness")
  (("function finalize" "finalize") "https://common-lisp.net/project/trivial-garbage/#trivial-garbage__fun__finalize" "function finalize")
  (("function cancel-finalization" "cancel-finalization") "https://common-lisp.net/project/trivial-garbage/#trivial-garbage__fun__cancel-finalization" "function cancel-finalization")
  (("function gc" "gc") "https://common-lisp.net/project/trivial-garbage/#trivial-garbage__fun__gc" "function gc"))
